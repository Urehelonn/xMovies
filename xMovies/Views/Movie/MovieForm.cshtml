@model xMovies.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (@Model.Movie == null)
{
    <h2>Add New Movie</h2>
}
else
{
    <h2>Edit Movie</h2>
}

@using (Html.BeginForm("Save", "Movie"))
{
    @Html.ValidationSummary(true, "Please fix following error(s):")
    <div class="form-group">
        @Html.LabelFor(c => c.Movie.Name)
        @Html.TextBoxFor(c => c.Movie.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Movie.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Movie.ReleaseDate)
        @Html.EditorFor(c => c.Movie.ReleaseDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Movie.ReleaseDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Movie.GenreId)
        @Html.DropDownListFor(c => c.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Movie.GenreId)
    </div>

    //Must have id for existing movie as well
    @Html.HiddenFor(c => c.Movie.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn-success">Save</button>
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}